@inherits RocketDirectoryAPI.Components.RocketDirectoryAPITokens<Simplisity.SimplisityRazor>
@using DNNrocketAPI.Components;
@using RocketDirectoryAPI.Components;
@AssigDataModel(Model)
@AddProcessDataResx(appTheme, true)
<!--inject-->
@{
    var info = moduleDataInfo;
    //NOTE: xPath for module settings must use "genxml/settings/*"
}
@AddProcessData("resourcepath", "/DesktopModules/DNNrocketModules/RocketDirectoryAPI/App_LocalResources")

@{
    var templateList = RocketDirectoryAPIUtils.ModuleTemples(appTheme, moduleData.ModuleRef);
    var sortList = new Dictionary<string, string>();
    sortList.Add("", "");
    if (portalContent != null)
    {
        foreach (var so in portalContent.GetOrderByList())
        {
            sortList.Add(so.GetXmlProperty("genxml/key"), so.GetXmlProperty("genxml/key"));
        }        
    }
}

<div id="a-datasection" class="w3-container w3-margin w3-padding">

    <div class="w3-row w3-padding">
        <!-- create element to update settings via API when the DNN update is clicked. -->
        <div id="postsettings" class="w3-right w3-button w3-round w3-theme-action w3-padding a-savebutton simplisity_click" s-cmd="@(systemData.SystemKey)_savesettings" s-post="#a-datasection" s-fields='{"systemkey":"@(systemData.SystemKey)","moduleref":"@moduleData.ModuleRef","moduleid":"@moduleData.ModuleId","tabid":"@(Model.SessionParamsData.TabId)"}'>
            @ButtonIcon(ButtonTypes.save)
        </div>
    </div>

    <div class="w3-row ">
        <div class="w3-quarter w3-padding">
            @CheckBox(info,"genxml/settings/disablecache", ResourceKey("DNNrocket.disablecache").ToString(),"class='w3-check'")
        </div>
        <div class="w3-quarter w3-padding">
            @CheckBox(info, "genxml/settings/disableheader", ResourceKey("DNNrocket.disableheader").ToString(), "class='w3-check'")
        </div>
        <div class="w3-quarter w3-padding">
            @CheckBoxRowECOMode(info, false)
        </div>
    </div>
    <div class="w3-row ">
        <div class="w3-quarter w3-padding">
            <label>Template</label>
            @DropDownList(info,"genxml/settings/displaytemplate", templateList, " class='w3-input w3-border' ","")
        </div>
        <div class="w3-quarter w3-padding">
            <label>Default Sort</label>
            @DropDownList(info,"genxml/settings/sortorderkey", sortList, " class='w3-input w3-border' ","")
        </div>
        <div class="w3-quarter  w3-padding">
            <label class="">@ResourceKey("RC.listpage")</label>
            @TabSelectListOnTabId(info, "genxml/settings/listpage"," class=' w3-input w3-border ' ", true,false,0,"",true)
        </div>
        <div class="w3-quarter  w3-padding">
            <label class="">@ResourceKey("RC.detailpage")</label>
            @TabSelectListOnTabId(info, "genxml/settings/detailpage", " class=' w3-input w3-border ' ", true, false, 0, "", true)
        </div>
    </div>
    <div class="w3-row ">
        <div class="w3-half w3-padding">
            <label>@ResourceKey("RC.apimoduleref")</label>
            <div class="w3-row">
                @ModSelectList(info, "genxml/settings/apimoduleref", info.PortalId, " class='w3-input w3-border' ")
            </div>
        </div>
    </div>

    <hr/>

    <div class="w3-row">
        @RenderTemplate("ThemeSettings.cshtml", appTheme, Model, true)
    </div>

</div>

<div class="w3-row w3-padding w3-tiny">
    <span>ModuleRef: @moduleData.ModuleRef</span>
</div>

@RenderXml(info)

<script>
    $(document).ready(function () {
        $(document).simplisityStartUp('/Desktopmodules/dnnrocket/api/rocket/action', { systemkey: '@(systemData.SystemKey)', debug: false });
        $('.simplisity_loader').hide();

        $('a[id*="_cmdUpdate"]').off("click");
        $('a[id*="_cmdUpdate"]').click(function () {
            simplisity_setCookieValue('simplisity_sessionparams', ''); // clear the simplsity data, so we refresh the values.
            simplisity_callserver($('#postsettings'));
        });

        $('#displaytemplate').change(function () {
            $('.a-savebutton').trigger('click');
        });
        $('#apimoduleref').change(function () {
            //$('.a-resetbutton').trigger('click');
        });

    });
</script>


